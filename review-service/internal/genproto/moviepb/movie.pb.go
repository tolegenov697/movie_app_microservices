// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: proto/moviepb/movie.proto

package moviepb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Краткая информация о фильме, передаваемая между сервисами
type MovieInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	ReleaseYear   int32                  `protobuf:"varint,3,opt,name=release_year,json=releaseYear,proto3" json:"release_year,omitempty"`
	Status        string                 `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"` // "approved", "pending_approval", "rejected"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MovieInfo) Reset() {
	*x = MovieInfo{}
	mi := &file_proto_moviepb_movie_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MovieInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MovieInfo) ProtoMessage() {}

func (x *MovieInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_moviepb_movie_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MovieInfo.ProtoReflect.Descriptor instead.
func (*MovieInfo) Descriptor() ([]byte, []int) {
	return file_proto_moviepb_movie_proto_rawDescGZIP(), []int{0}
}

func (x *MovieInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MovieInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *MovieInfo) GetReleaseYear() int32 {
	if x != nil {
		return x.ReleaseYear
	}
	return 0
}

func (x *MovieInfo) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

// Запрос на получение информации о фильме
type GetMovieInfoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MovieId       string                 `protobuf:"bytes,1,opt,name=movie_id,json=movieId,proto3" json:"movie_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMovieInfoRequest) Reset() {
	*x = GetMovieInfoRequest{}
	mi := &file_proto_moviepb_movie_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMovieInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMovieInfoRequest) ProtoMessage() {}

func (x *GetMovieInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_moviepb_movie_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMovieInfoRequest.ProtoReflect.Descriptor instead.
func (*GetMovieInfoRequest) Descriptor() ([]byte, []int) {
	return file_proto_moviepb_movie_proto_rawDescGZIP(), []int{1}
}

func (x *GetMovieInfoRequest) GetMovieId() string {
	if x != nil {
		return x.MovieId
	}
	return ""
}

// Ответ с информацией о фильме
type GetMovieInfoResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MovieInfo     *MovieInfo             `protobuf:"bytes,1,opt,name=movie_info,json=movieInfo,proto3" json:"movie_info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMovieInfoResponse) Reset() {
	*x = GetMovieInfoResponse{}
	mi := &file_proto_moviepb_movie_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMovieInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMovieInfoResponse) ProtoMessage() {}

func (x *GetMovieInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_moviepb_movie_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMovieInfoResponse.ProtoReflect.Descriptor instead.
func (*GetMovieInfoResponse) Descriptor() ([]byte, []int) {
	return file_proto_moviepb_movie_proto_rawDescGZIP(), []int{2}
}

func (x *GetMovieInfoResponse) GetMovieInfo() *MovieInfo {
	if x != nil {
		return x.MovieInfo
	}
	return nil
}

// Запрос на проверку существования фильма
type CheckMovieExistsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MovieId       string                 `protobuf:"bytes,1,opt,name=movie_id,json=movieId,proto3" json:"movie_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckMovieExistsRequest) Reset() {
	*x = CheckMovieExistsRequest{}
	mi := &file_proto_moviepb_movie_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckMovieExistsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckMovieExistsRequest) ProtoMessage() {}

func (x *CheckMovieExistsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_moviepb_movie_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckMovieExistsRequest.ProtoReflect.Descriptor instead.
func (*CheckMovieExistsRequest) Descriptor() ([]byte, []int) {
	return file_proto_moviepb_movie_proto_rawDescGZIP(), []int{3}
}

func (x *CheckMovieExistsRequest) GetMovieId() string {
	if x != nil {
		return x.MovieId
	}
	return ""
}

// Ответ о существовании фильма
type CheckMovieExistsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Exists        bool                   `protobuf:"varint,1,opt,name=exists,proto3" json:"exists,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckMovieExistsResponse) Reset() {
	*x = CheckMovieExistsResponse{}
	mi := &file_proto_moviepb_movie_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckMovieExistsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckMovieExistsResponse) ProtoMessage() {}

func (x *CheckMovieExistsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_moviepb_movie_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckMovieExistsResponse.ProtoReflect.Descriptor instead.
func (*CheckMovieExistsResponse) Descriptor() ([]byte, []int) {
	return file_proto_moviepb_movie_proto_rawDescGZIP(), []int{4}
}

func (x *CheckMovieExistsResponse) GetExists() bool {
	if x != nil {
		return x.Exists
	}
	return false
}

var File_proto_moviepb_movie_proto protoreflect.FileDescriptor

const file_proto_moviepb_movie_proto_rawDesc = "" +
	"\n" +
	"\x19proto/moviepb/movie.proto\x12\x05movie\"l\n" +
	"\tMovieInfo\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12!\n" +
	"\frelease_year\x18\x03 \x01(\x05R\vreleaseYear\x12\x16\n" +
	"\x06status\x18\x04 \x01(\tR\x06status\"0\n" +
	"\x13GetMovieInfoRequest\x12\x19\n" +
	"\bmovie_id\x18\x01 \x01(\tR\amovieId\"G\n" +
	"\x14GetMovieInfoResponse\x12/\n" +
	"\n" +
	"movie_info\x18\x01 \x01(\v2\x10.movie.MovieInfoR\tmovieInfo\"4\n" +
	"\x17CheckMovieExistsRequest\x12\x19\n" +
	"\bmovie_id\x18\x01 \x01(\tR\amovieId\"2\n" +
	"\x18CheckMovieExistsResponse\x12\x16\n" +
	"\x06exists\x18\x01 \x01(\bR\x06exists2\xb1\x01\n" +
	"\x11MovieInterService\x12G\n" +
	"\fGetMovieInfo\x12\x1a.movie.GetMovieInfoRequest\x1a\x1b.movie.GetMovieInfoResponse\x12S\n" +
	"\x10CheckMovieExists\x12\x1e.movie.CheckMovieExistsRequest\x1a\x1f.movie.CheckMovieExistsResponseB)Z'movie-service/internal/genproto/moviepbb\x06proto3"

var (
	file_proto_moviepb_movie_proto_rawDescOnce sync.Once
	file_proto_moviepb_movie_proto_rawDescData []byte
)

func file_proto_moviepb_movie_proto_rawDescGZIP() []byte {
	file_proto_moviepb_movie_proto_rawDescOnce.Do(func() {
		file_proto_moviepb_movie_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_moviepb_movie_proto_rawDesc), len(file_proto_moviepb_movie_proto_rawDesc)))
	})
	return file_proto_moviepb_movie_proto_rawDescData
}

var file_proto_moviepb_movie_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_proto_moviepb_movie_proto_goTypes = []any{
	(*MovieInfo)(nil),                // 0: movie.MovieInfo
	(*GetMovieInfoRequest)(nil),      // 1: movie.GetMovieInfoRequest
	(*GetMovieInfoResponse)(nil),     // 2: movie.GetMovieInfoResponse
	(*CheckMovieExistsRequest)(nil),  // 3: movie.CheckMovieExistsRequest
	(*CheckMovieExistsResponse)(nil), // 4: movie.CheckMovieExistsResponse
}
var file_proto_moviepb_movie_proto_depIdxs = []int32{
	0, // 0: movie.GetMovieInfoResponse.movie_info:type_name -> movie.MovieInfo
	1, // 1: movie.MovieInterService.GetMovieInfo:input_type -> movie.GetMovieInfoRequest
	3, // 2: movie.MovieInterService.CheckMovieExists:input_type -> movie.CheckMovieExistsRequest
	2, // 3: movie.MovieInterService.GetMovieInfo:output_type -> movie.GetMovieInfoResponse
	4, // 4: movie.MovieInterService.CheckMovieExists:output_type -> movie.CheckMovieExistsResponse
	3, // [3:5] is the sub-list for method output_type
	1, // [1:3] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_proto_moviepb_movie_proto_init() }
func file_proto_moviepb_movie_proto_init() {
	if File_proto_moviepb_movie_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_moviepb_movie_proto_rawDesc), len(file_proto_moviepb_movie_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_moviepb_movie_proto_goTypes,
		DependencyIndexes: file_proto_moviepb_movie_proto_depIdxs,
		MessageInfos:      file_proto_moviepb_movie_proto_msgTypes,
	}.Build()
	File_proto_moviepb_movie_proto = out.File
	file_proto_moviepb_movie_proto_goTypes = nil
	file_proto_moviepb_movie_proto_depIdxs = nil
}
